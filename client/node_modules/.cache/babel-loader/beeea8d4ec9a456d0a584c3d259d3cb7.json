{"ast":null,"code":"var _jsxFileName = \"/Users/purple/GA/yev-portfolio/yeveloper/client/src/components/Works.jsx\";\nimport React from \"react\";\nimport \"./styles/Works.css\";\nimport axios from \"axios\";\n\nclass Works extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderWorks = () => {\n      if (this.state.works.length) {\n        return this.state.works.map(work => {\n          return React.createElement(\"div\", {\n            className: \"work\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, work.id), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, work.deployedUrl));\n        });\n        console.log();\n      }\n    };\n\n    this.state = {\n      works: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await axios(`http://localhost:3000/api/works/`);\n      this.setState({\n        works: response.data\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  render() {\n    const works = this.state.works;\n    console.log(works);\n\n    if (!works) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Loading\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"works-main-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.renderWorks()));\n  }\n\n}\n\nexport default Works;","map":{"version":3,"sources":["/Users/purple/GA/yev-portfolio/yeveloper/client/src/components/Works.jsx"],"names":["React","axios","Works","Component","constructor","props","renderWorks","state","works","length","map","work","id","deployedUrl","console","log","componentDidMount","response","setState","data","err","error","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,WAfmB,GAeL,MAAM;AAChB,UAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAArB,EAA6B;AACzB,eAAO,KAAKF,KAAL,CAAWC,KAAX,CAAiBE,GAAjB,CAAqBC,IAAI,IAAI;AAChC,iBACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIA,IAAI,CAACC,EAAT,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAID,IAAI,CAACE,WAAT,CAFA,CADJ;AAMH,SAPM,CAAP;AAQAC,QAAAA,OAAO,CAACC,GAAR;AACH;AACJ,KA3BkB;;AAEjB,SAAKR,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AACD,QAAMQ,iBAAN,GAA0B;AACxB,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAAE,kCAAF,CAA5B;AACA,WAAKiB,QAAL,CAAc;AAAEV,QAAAA,KAAK,EAAES,QAAQ,CAACE;AAAlB,OAAd;AACD,KAHD,CAGE,OAAOC,GAAP,EAAY;AACZN,MAAAA,OAAO,CAACO,KAAR,CAAcD,GAAd;AACD;AACF;;AAeDE,EAAAA,MAAM,GAAG;AAAA,UACCd,KADD,GACW,KAAKD,KADhB,CACCC,KADD;AAEPM,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;;AACA,QAAI,CAACA,KAAL,EAAY;AACR,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;;AAGH,WACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKF,WAAL,EAAJ,CADA,CADJ;AAMH;;AA3CmC;;AA8CpC,eAAeJ,KAAf","sourcesContent":["import React from \"react\";\nimport \"./styles/Works.css\";\nimport axios from \"axios\";\n\nclass Works extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      works: []\n    };\n  }\n  async componentDidMount() {\n    try {\n      const response = await axios(`http://localhost:3000/api/works/`);\n      this.setState({ works: response.data });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  renderWorks = () => {\n      if (this.state.works.length) {\n          return this.state.works.map(work => {\n              return (\n                  <div className=\"work\">\n                  <p>{work.id}</p>\n                  <p>{work.deployedUrl}</p>\n                  </div>\n              )\n          })\n          console.log()\n      }\n  }\n  render() { \n    const { works } = this.state\n    console.log(works)\n    if (!works) {\n        return <p>Loading</p>;\n      }\n      \n\n    return ( \n        <div className='works-main-container'>\n        <p>{this.renderWorks()}</p>\n        </div>\n     );\n     \n}\n}\n\nexport default Works;\n"]},"metadata":{},"sourceType":"module"}