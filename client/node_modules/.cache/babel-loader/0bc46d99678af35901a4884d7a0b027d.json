{"ast":null,"code":"var _jsxFileName = \"/Users/purple/GA/yev-portfolio/yeveloper/client/src/components/Works.jsx\";\nimport React from 'react';\nimport './styles/Works.css';\nimport axios from 'axios';\n\nclass Works extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderWorks = () => {\n      if (this.state.works.length) {\n        return this.state.works.map(work => {\n          return React.createElement(\"div\", {\n            className: \"works-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, work.id), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, work.deployedUrl));\n        });\n      }\n    };\n\n    this.state = {\n      works: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const id = this.props.match.params.id;\n      const response = await axios(`http://localhost:3000/api/works/`);\n      this.setState({\n        works: response.data\n      });\n      console.log(this.state.works);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  render() {\n    const renderworks = this.renderWorks;\n    return React.createElement(\"div\", {\n      className: \"works-main-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.renderWorks);\n  }\n\n}\n\nexport default Works;","map":{"version":3,"sources":["/Users/purple/GA/yev-portfolio/yeveloper/client/src/components/Works.jsx"],"names":["React","axios","Works","Component","constructor","props","renderWorks","state","works","length","map","work","id","deployedUrl","componentDidMount","match","params","response","setState","data","console","log","err","error","render","renderworks"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAqBnBC,WArBmB,GAqBL,MAAM;AAChB,UAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAArB,EAA6B;AACzB,eAAO,KAAKF,KAAL,CAAWC,KAAX,CAAiBE,GAAjB,CAAqBC,IAAI,IAAI;AAChC,iBACI;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIA,IAAI,CAACC,EAAT,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAID,IAAI,CAACE,WAAT,CAFA,CADJ;AAMH,SAPM,CAAP;AAQH;AACJ,KAhCkB;;AAEf,SAAKN,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AACD,QAAMM,iBAAN,GAA0B;AACtB,QAAI;AAAA,YAEcF,EAFd,GAGI,KAAKP,KAAL,CAAWU,KAHf,CAEIC,MAFJ,CAEcJ,EAFd;AAIA,YAAMK,QAAQ,GAAG,MAAMhB,KAAK,CACvB,kCADuB,CAA5B;AAGA,WAAKiB,QAAL,CAAc;AAAEV,QAAAA,KAAK,EAAES,QAAQ,CAACE;AAAlB,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWC,KAAvB;AACH,KATD,CASE,OAAOc,GAAP,EAAY;AACVF,MAAAA,OAAO,CAACG,KAAR,CAAcD,GAAd;AACH;AACJ;;AAcDE,EAAAA,MAAM,GAAG;AACL,UAAMC,WAAW,GAAG,KAAKnB,WAAzB;AACA,WACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKA,WADN,CADJ;AAKH;;AAzC+B;;AA4CpC,eAAeJ,KAAf","sourcesContent":["import React from 'react';\nimport './styles/Works.css'\nimport axios from 'axios'\n\nclass Works extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            works: []\n         }\n    }\n    async componentDidMount() {\n        try {\n            const {\n                params: { id }\n            } = this.props.match\n            const response = await axios (\n                `http://localhost:3000/api/works/`\n            )\n            this.setState({ works: response.data })\n            console.log(this.state.works)\n        } catch (err) {\n            console.error(err)\n        }\n    }\n\n    renderWorks = () => {\n        if (this.state.works.length) {\n            return this.state.works.map(work => {\n                return (\n                    <div className=\"works-container\">\n                    <p>{work.id}</p>\n                    <p>{work.deployedUrl}</p>\n                    </div>\n                )\n            })\n        }\n    }\n    render() { \n        const renderworks = this.renderWorks\n        return ( \n            <div className='works-main-container'>\n            {this.renderWorks}\n            </div>\n         );\n    }\n}\n \nexport default Works;"]},"metadata":{},"sourceType":"module"}